@using ZBC.Models
@model IEnumerable<Product>

@{
    ViewData["Title"] = "Programming Playground";

    var laptopsOnly = Model.Where(m => m.ProductType == "Laptop").ToList();

    Product[] productArray = Model.Take(5).ToArray();

    int whileCounter = 0;
    int doWhileCounter = productArray.Length - 1;

    int counter = 0;
}

<h2>@ViewData["Title"]</h2>

@if (Model != null && Model.Any())
{
@*     <h3>For Loop Example: First 5 Products</h3>
    <ul>
        @for (int i = 0; i < productArray.Length; i++)
        {
            <li>@productArray[i].ModelId - @productArray[i].ProductType</li>
        }
    </ul> *@

    <h3>While Loop Example: Iterating over Array</h3>
    <ul>
        @while (whileCounter < productArray.Length)
        {
            <li>@productArray[whileCounter].ModelId - @productArray[whileCounter].ProductType</li>
            whileCounter++;
        }
    </ul>

    <h3>Do-While Loop Example: Reverse Iterating over Array</h3>
    <ul>
        @do
        {
            <li>@productArray[doWhileCounter].ModelId - @productArray[doWhileCounter].ProductType</li>
            doWhileCounter--;
        } while (doWhileCounter >= 0);
    </ul>

@*     <h3>Foreach Example - Products List</h3>
    <ul>
        @foreach (var product in Model)
        {
            <li>
                Model ID: @product.ModelId, Maker: @product.MakerId, Type: @product.ProductType
                @if (product.Laptop != null)
                {
                    <div>Laptop - Speed: @product.Laptop.Speed, Price: @product.Laptop.Price</div>
                }
                else if (product.Pc != null)
                {
                    <div>PC - RAM: @product.Pc.Ram, Price: @product.Pc.Price</div>
                }
                else if (product.Printer != null)
                {
                    <div>Printer - Color: @product.Printer.Color, Price: @product.Printer.Price</div>
                }
            </li>
        }
    </ul> *@

@*     <h3>Price Range Check with Switch</h3>
    @foreach (var product in Model)
    {
        <div>
            @switch (product.Laptop?.Price)
            {
                case > 1000:
                    <text>High-end Laptop</text>
                    break;
                case <= 1000 and > 500:
                    <text>Mid-range Laptop</text>
                    break;
                case < 500:
                    <text>Entry-level Laptop</text>
                    break;
                default:
                    <text>Price not available</text>
                    break;
            }
        </div>
    }   *@

@*     <h3>Conditional Check with If-Else Inside While Loop</h3>        
    @while (counter < productArray.Length)
    {
        if (productArray[counter].Laptop != null)
        {
            <p>Laptop Model ID: @productArray[counter].ModelId, Price: @productArray[counter].Laptop.Price</p>
        }
        else if (productArray[counter].Pc != null)
        {
            <p>PC Model ID: @productArray[counter].ModelId, RAM: @productArray[counter].Pc.Ram</p>
        }
        else if (productArray[counter].Printer != null)
        {
            <p>Printer Model ID: @productArray[counter].ModelId, Color: @productArray[counter].Printer.Color</p>
        }
        else
        {
            <p>Other Product Type: @productArray[counter].ModelId</p>
        }
        counter++;
    } *@
}
else
{
    <p>No products found.</p>
}